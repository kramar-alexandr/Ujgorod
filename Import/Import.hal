external procedure PUVc_PasteTransDate(var record PUVc,var Boolean,var Boolean,var Boolean);
external procedure PUSumUp(var record PUVc);
external function Boolean PUVc_PasteArtCode(var record PUVc,Integer,var string,var string);


global updating procedure INImportIn()		//Edit----------------------Dima  05.02.2016
begin
	record INVc INr;
	record DIVc DIr;
	record ITVc ITr;	
	string 255 artcode, name, classBrand, className, itemGroup,classType;

	//SetImportCodepage("CP1251");

	while (TestEOF()==false) begin
		artcode = ImportField;
		name = ImportField;
		classBrand = ImportField;
		className = ImportField;
		classType = ImportField;
		itemGroup = ImportField;

		INr.Code = artcode;
		if (ReadFirstMain(INr,1,true)==false) then begin

			RecordNew(INr);
			INr.Code = artcode;
			INr.Name = name;
			INr.ItemType = kItemTypeStocked;
    	
    	if (nonblank(classBrand)) then begin
				DIr.Code = classBrand;
				if (ReadFirstMain(DIr,1,true)) then begin
					INr.DispGroups = DIr.Code;
				end else begin
					RecordNew(DIr);
					DIr.Code = classBrand;
					DIr.Name = className;
					DIr.CType = "BRAND";					
					RecordStore(DIr,true);
				end;
			end;
			
			if (nonblank(classType)) then begin
				DIr.Code = classType;
				if (ReadFirstMain(DIr,1,true)) then begin
					INr.DispGroups = DIr.Code;
				end else begin
					RecordNew(DIr);
					DIr.Code = classType;
					DIr.Name = classType;
					DIr.CType = "TYPE";
					DIr.DispGroups = "MAIN";
					RecordStore(DIr,true);
				end;
			end;
			
			INr.DispGroups = classType & "," & classBrand;
			
			if (nonblank(itemGroup)) then begin
				ITr.Code = itemGroup;
				if (ReadFirstMain(ITr,1,true)) then begin
					INr.Group = ITr.Code;
				end else begin
					RecordNew(ITr);
					ITr.Code = itemGroup;
					ITr.Comment = className;
					RecordStore(ITr,true);
					INr.Group = ITr.Code;
				end;
			end;			
						
			
			RecordStore(INr,true);
		end;

		NextImportLine(true);
	end;
  
end;


global updating procedure VARImportIn()
begin
	record VARVc VARr;
	string 255 code, name, group;

	SetImportCodepage("CP1251");

	while (TestEOF()==false) begin
		code = ImportField;
		name = ImportField;
		group = ImportField;

		VARr.Code = code;
		if (ReadFirstMain(VARr,1,true)==false) then begin
			RecordNew(VARr);
			VARr.Code = code;
			VARr.Comment = name;
			VARr.VARGCode = group;
			RecordStore(VARr,true);			
		end;

		NextImportLine(true);
	end;  
end;


global updating procedure ItemPricesImportIn()
begin
	record VARVc VARr;
	record INVc INr;
	record PLVc PLr;
	record BarcodeVc Barr;
	string 255 code, var1,var2,bar,aditional,fullcode,collection,serialNr;
	val price;

	//SetImportCodepage("CP1251");

	while (TestEOF()==false) begin
		code = ImportField;
		var1 = ImportField;
		var2 = ImportField;
		collection = ImportField;
		price = StringToVal(ImportField,M45Val);
		bar = ImportField;
		
		serialNr = code & "." & var1 & "." & var2 & "." & collection;

		if (nonblank(code)) then begin

			recordnew(PLr);
			PLr.ArtCode = code;
			PLr.PLCode = "RRP";
			PLr.SerialNr = serialNr;
			PLr.ExVatPrice = price;
			INr.Code = code;
			if (ReadFirstMain(INr,1,true))	then begin
				PLr.Comment = INr.Name;
			end;
			RecordStore(PLr,false);
    	
    	if (nonblank(bar)) then begin
				recordnew(Barr);
				Barr.Itemcode = code;
				Barr.Barcode = bar;
				Barr.Comment = INr.Name;
				Barr.SerialNr = serialNr;
				RecordStore(Barr,false);
			end;

		end;

		NextImportLine(true);
	end;  
end;



global updating procedure ImportStockRemainsIn()			//Edit----------------------Dima  14.06.2016
begin
	record PUVc PUr;
	row PUVc PUrw;
	string 100 location;
	string 255 code, var1,var2,collection;
	Boolean datewarnf,warnoldrecordsf,warnfutdatef;
	string 255 warning,inwarn;
	integer rownr,qty;
	val cost;
	
	location = ImportField;
	NextImportLine(true);
	
	if (blank(location)) then begin
		goto LImportStockRemainsIn;
	end;
	
	RecordNew(PUr);
	
	PUr.SerNr = NextSerNr("PUVc",PUr.TransDate,-1,false,"");
	PUr.TransDate = CurrentDate;
	PUr.Location = location;
	PUVc_PasteTransDate(PUr,datewarnf,warnoldrecordsf,warnfutdatef);
	rownr = 0;
	
	while (TestEOF()==false) begin
		code = ImportField;
		var1 = ImportField;
		var2 = ImportField;
		collection = ImportField;
		cost = StringToVal(ImportField,M45Val);
		qty = StringToInt(ImportField);


		if (nonblank(code)) then begin

			PUrw.ArtCode = code;
			MatRowPut(PUr,rownr,PUrw);
			PUVc_PasteArtCode(PUr,rownr,warning,inwarn);
			MatRowGet(PUr,rownr,PUrw);
			PUrw.SerialNr = code & "." & var1 & "." & var2 & "." & collection;
			PUrw.Quant = qty;
			PUrw.UPrice = cost;
    	PUrw.CostPrice = cost;
    	PUrw.Sum = cost*qty;		
			MatRowPut(PUr,rownr,PUrw);
			rownr = rownr + 1;
		end;

		NextImportLine(true);
	end;
	
	PUSumUp(PUr);
	RecordInsert(PUr,true);	
  
  LImportStockRemainsIn:;
end;
