external function roundmode SetRoundModeD(Integer);
external function Boolean PUVc_PasteArtCode(var record PUVc,Integer,var string,var string);
external procedure PUSumUp(var record PUVc);
external procedure PUVc_PasteTransDate(var record PUVc,var Boolean,var Boolean,var Boolean);

global
procedure CalcEANCHS(var string str)
begin
integer c1,c2,lenth,i,chsum,litle;
val sum;
  sum = 0;
  lenth = len(str);
  if (lenth==12)then begin
    for(i=0;i<12;i=i+2)begin
      c1 = evaltoval(mid(str,i,1));
      c2 = evaltoval(mid(str,i+1,1));
      c2=c2*3;
      sum = sum+c1+c2;
    end;
    if(round(sum/10,SetRoundModeD(0))>sum/10) then begin
      litle = round(sum/10,SetRoundModeD(0))-1;
    end else begin
      litle = round(sum/10,SetRoundModeD(0));
    end;
    chsum  = 10-(10*(sum/10-litle));
    if(chsum==10) then begin chsum = 0; end;
    str = str & chsum;
  end else begin
    str = "";
  end;
  
return;
end;

global
procedure StringValIncrement(var string barcode,Integer increment)
begin
  integer lenght,i,lastindex,leftover,base,incr;
  array integer digit;
  boolean testf;
    
    testf = true;
    lenght = len(barcode);
    incr = increment;
    for (i=0;i<lenght;i=i+1) begin
      digit[i] = StringToInt(mid(barcode,i,1));
      lastindex = i;
    end;
    digit[lastindex] = digit[lastindex] + incr;
    while (digit[lastindex]>9 and testf) begin
      leftover = Mod(digit[lastindex],10);
      base = digit[lastindex] - leftover;
      if (base>0) then begin
        digit[lastindex] = leftover;
        incr = base/10;
        lastindex = lastindex - 1;
        digit[lastindex] = digit[lastindex] + incr;
      end;
      if (lastindex==0 and digit[lastindex]>9) then begin
        testf = false;
      end;
    end;
    barcode = "";
    if (testf) then begin
      for (i=0;i<lenght;i=i+1) begin
        barcode = barcode & digit[i];
      end;
    end;
 
  return; 
end;

global updating procedure CleaningMn() //Edit----------------------Dima  09.06.2016
begin
	record IVVc IVr;
	record VIVc VIr;
	record IPVc IPr;
	record RLinkVc RLr;
	record POVc POr;
	record PUVc PUr; // только  unOK
	record StockMovVc SMr;
	record SDVc SDr;
	record ItemStatusVc ISr;
	record ItemHistVc IHr;
	record SerBalVc SBr;
  record RetVc Retr;
	record RetPUVc RetPUr;
  record TRVc TRr;
  record OPVc OPr;
  record ORVc ORr;
  record SHVc SHr;
  record StockTakeVc STr;
  record FBVc FBr;
  record SRPriceVc SRPr;
  record SRVc SRr;
  record BarCodeVc BCr;
  record INVc INr;
  
	Boolean TrHs;
	
	TrHs = true;
	while (LoopMain(IVr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(IVr);
	    StepBack(IVr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(VIr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(VIr);
	    StepBack(VIr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(IPr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(IPr);
	    StepBack(IPr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(RLr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(RLr);
	    StepBack(RLr);
	  end;
	end;
	TrHs = true;
	while (LoopMain(POr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(POr);
	    StepBack(POr);
	  end;
	end;
	TrHs = true;
	while (LoopMain(PUr,1,TrHs)) begin
	  if (TrHs) then begin
	    PUr.OKFlag = 0;
      RecordStore(PUr,true);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(SMr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(SMr);
	    StepBack(SMr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(SDr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(SDr);
	    StepBack(SDr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(ISr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(ISr);
	    StepBack(ISr);
	  end;
	end;
	LogText(0,"Item statuses were removed..");
	TrHs = true;	
	while (LoopMain(IHr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(IHr);
	    StepBack(IHr);
	  end;
	end;
	LogText(0,"Item histiry was removed..");					
	TrHs = true;	
	while (LoopMain(SBr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(SBr);
	    StepBack(SBr);
	  end;
	end;	
	TrHs = true;	
	while (LoopMain(Retr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(Retr);
	    StepBack(Retr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(RetPUr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(RetPUr);
	    StepBack(RetPUr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(TRr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(TRr);
	    StepBack(TRr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(OPr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(OPr);
	    StepBack(OPr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(ORr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(ORr);
	    StepBack(ORr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(SHr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(SHr);
	    StepBack(SHr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(STr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(STr);
	    StepBack(STr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(FBr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(FBr);
	    StepBack(FBr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(SRPr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(SRPr);
	    StepBack(SRPr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(SRr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(SRr);
	    StepBack(SRr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(INr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(INr);
	    StepBack(INr);
	  end;
	end;
	
  TrHs = true;	
	while (LoopMain(BCr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(BCr);
	    StepBack(BCr);
	  end;
	end;
	
	LogText(0,"Registers were cleaned.......");
return;
end;

global updating procedure Cleaning2Mn() //Edit----------------------Dima  09.06.2016
begin
	record BarCodeVc BCr;
  record PLVc PLr;
  Boolean TrHs;
	
	TrHs = true;	
	while (LoopMain(BCr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(BCr);
	    StepBack(BCr);
	  end;
	end;
	TrHs = true;	
	while (LoopMain(PLr,1,TrHs)) begin
	  if (TrHs) then begin
	    RecordDelete(PLr);
	    StepBack(PLr);
	  end;
	end;
	LogText(0,"Registers were cleaned.......");
return;
end;

global updating procedure SetSerialNumberTypeForItemsMn(record RcVc RepSpec)	//Edit----------------------Dima  10.06.2016
begin
	record INVc INr;
	
	While(LoopMain(INr,1,true))  begin
		if (INr.Terminated==0) then begin
			INr.SerNrf = RepSpec.flags[0];
			RecordStore(INr,true);
		end;
	end;
  
end;

global updating procedure PUFromSerBalMn(record RcVc RecSpec) //Edit-------------------Vitalii 11:09 19.07.2016
begin
  record SerBalVc SBr;
  record PUVc PUr;
  row PUVc PUrw;
  integer i,quant;
  string 255 tstr,tstr2;
  Boolean datewarnf,warnoldrecordsf,warnfutdatef;
  
  quant = StringToInt(RecSpec.f1);
  i = 0;
  RecordNew(PUr);
  PUr.SerNr = NextSerNr("PUVc",PUr.TransDate,-1,false,"");
	PUr.TransDate = CurrentDate;
	PUVc_PasteTransDate(PUr,datewarnf,warnoldrecordsf,warnfutdatef);
  while (LoopMain(SBr,1,true)) begin
    if (SBr.Quant > 0) then begin
      ClearRow(PUr,PUrw,1);
      PUrw.ArtCode = SBr.Item;
      MatRowPut(PUr,i,PUrw);
      PUVc_PasteArtCode(PUr,i,tstr,tstr2);
      MatRowGet(PUr,i,PUrw);
      PUrw.Quant = quant;
      PUrw.Location = SBr.Location;
      PUrw.SerialNr = SBr.Serial;
      PUrw.UPrice = SBr.CostPrice;
      PUrw.CostPrice = SBr.CostPrice;
      PUrw.Sum = SBr.CostPrice * quant;
      MatRowPut(PUr,i,PUrw);
      i = i + 1;
    end;
    if i>999 then begin
      PUSumUp(PUr);
      RecordStore(PUr,true);
      RecordNew(PUr);
      PUr.SerNr = NextSerNr("PUVc",PUr.TransDate,-1,false,"");
      PUr.TransDate = CurrentDate;
      PUVc_PasteTransDate(PUr,datewarnf,warnoldrecordsf,warnfutdatef);
      i = 0;
    end;
  end;
  PUSumUp(PUr);
  RecordStore(PUr,true);
  return;
end;