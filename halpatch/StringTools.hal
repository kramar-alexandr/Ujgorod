external procedure ExtractObjWithSeparator(string,string,Boolean,var Integer,var string);
external function Boolean IsEnterprise();
external function Boolean HasContactClassification();
external function Boolean HasOfficialSerNr();
external function Boolean HasMultiCurrency();
external function Boolean HasBase2();
external function Boolean HasCategories();
external function Boolean HasObjects();

//replace all "findWord"s in "Source" to "newWord"
global
function string 255 ReplaceAllSubStringInString(string findWord, string newWord, string Source )		//Edit----------------------Dima  02.03.2015
begin
	integer i,length,lengthFind,lengthNew,diff;
	string 255 temp,str,inStr,res;

	length = len(findWord);
	lengthNew = len(newWord);
	lengthFind=len(Source);
	diff=lengthFind-length;

	str=UpperCase(findWord);   
	inStr=Source;		
	if (diff<0) then begin
	goto	breakFunction;
	end;
	
	for(i=0;i<=diff;i=i+1) begin
	 temp = mid(inStr,i,length);
	 if(UpperCase(temp)==str) then begin
			res = left(inStr,i) & newWord & Right(inStr,lengthFind-i-length);
			i = i + length;
			inStr = res;
	 end;	
	end;

	breakFunction:; // goto
	ReplaceAllSubStringInString = inStr;
return;  
end;


//pos - from 0 to length-1. This is  position of substring
global 
procedure  ReplaceSubstringInString(var string source, string put, integer pos)		//Edit----------------------Dima  27.02.2015
begin
	string 255 result;
	integer lenSubStr;
	
	if ( Len(put) + pos <= Len(source)) then begin
		lenSubStr = Len(put);
	end else begin
		lenSubStr = Len(source)-pos;
	end;
	
	result = Left(source,pos) & Left(put,lenSubStr) & Right(source, Len(source)-pos-lenSubStr);
	source = result;
  
end;



global
function string 255 InsertSubStringInString(string source, string put, integer pos) //Edit----------------------Dima  02.03.2015
begin
	string 255 result;
	
	result = Left(source,pos) &  put & Right(source,Len(source)-pos);
  InsertSubStringInString = result;
return;
end;



global
function Integer FindFirstPosStringInString( string Search, string Source )//Edit----------------------Dima  20.02.2015
begin
	integer i,length,lengthSource,diff;
	string 150 temp,str,inStr;
	integer res;
	
	res=-1;
	length=len(Search);
	lengthSource=len(Source);
	diff=lengthSource-length;

	str=UpperCase(Search);   
	inStr=UpperCase(Source);		
	if (diff<0) then begin
	goto	LbreakFirstPos;
	end;
	
	for(i=0;i<=diff;i=i+1) begin
	 temp=mid(inStr,i,length);
	 if(temp==str) then begin
	 	res = i;
	 	goto LbreakFirstPos;
	 end;	
	end;

	LbreakFirstPos:; 
	FindFirstPosStringInString=res;
return;  
end;


global
function Boolean FindSubString( string Search, string Source )
begin
	integer i,length,lengthSource,diff;
	string 150 temp,str,inStr;
	boolean res;
	
	res=false;
	length=len(Search);
	lengthSource=len(Source);
	diff=lengthSource-length;

	str=UpperCase(Search);   
	inStr=UpperCase(Source);		
	if (diff<0) then begin
	goto	breakFunction;
	end;
	
	for(i=0;i<=diff;i=i+1) begin
	 temp=mid(inStr,i,length);
	 if(temp==str) then begin
	 	res = true;
	 	goto breakFunction;
	 end;	
	end;

	breakFunction:; // goto
	FindSubString=res;
return;  
end;


global
procedure GetPartsOfString(string str,integer size,var array string parts)	//Edit----------------------Dima  22.10.2015
begin
	string 255 tempStr;
	string 255 shortPart;
	integer i;
	
	tempStr = str;
	ClearArray(parts);
	
	while(tempStr!="") begin
		shortPart = Left(tempStr,size);
		tempStr = Right(tempStr,Len(tempStr)-size);
		while (Left(shortPart,1)==" ") begin
			i=i+1;
			shortPart = Right(shortPart,size-i);
		end;
		parts[parts.length] = shortPart;
	end;
  
end;

global
function string 255 ChangeCaseStr(string source, integer format) //Edit-------------------Vitalii 11:02 13.09.2016
begin
/*
format =
1 - UpperCase
2 - LowerCase
3 - Like sentence
4 - First big in all words
*/
	string 255 res;
  integer i;
  
  switch (format) begin
    case 1:
      res = UpperCase(source);
    case 2:
      res = LowerCase(source);
    case 3:
      res = UpperCase(left(source,1)) & LowerCase(right(source,(len(source) - 1)));
    case 4:
      for(i=0;i<=len(source);i=i+1) begin
        if (i==0) or
           (Mid(source,i-1,1) == " ") or (Mid(source,i-1,1) == ",") or
           (Mid(source,i-1,1) == "_") or (Mid(source,i-1,1) == ".") or
           (Mid(source,i-1,1) == ";") or (Mid(source,i-1,1) == ":") or
           (Mid(source,i-1,1) == "(") or (Mid(source,i-1,1) == ")") or
           (Mid(source,i-1,1) == "[") or (Mid(source,i-1,1) == "]") or
           (Mid(source,i-1,1) == "{") or (Mid(source,i-1,1) == "}") or
           (Mid(source,i-1,1) == "/") or (Mid(source,i-1,1) == "\\") or
           (Mid(source,i-1,1) == "'") or (Mid(source,i-1,1) == "\"") or
           (Mid(source,i-1,1) == "-") or (Mid(source,i-1,1) == "+") or
           (Mid(source,i-1,1) == "=") or (Mid(source,i-1,1) == "?") or
           (Mid(source,i-1,1) == "&") or (Mid(source,i-1,1) == "!") or
           (Mid(source,i-1,1) == "@") or (Mid(source,i-1,1) == "#") or
           (Mid(source,i-1,1) == "$") or (Mid(source,i-1,1) == "%") or
           (Mid(source,i-1,1) == "^") or (Mid(source,i-1,1) == "*") then begin
          res = res & UpperCase(Mid(source,i,1));
        end else begin
          res = res & LowerCase(Mid(source,i,1));
        end;
      end;
	end;
	ChangeCaseStr = res;
return;
end;

global
procedure ARS2RClass_ENG()
begin
  real h,v,vm,vs;

  if (IsEnterprise()) then begin 
    SetWRect(20,80,450,450);
  end else begin
    SetWRect(20,80,410,250);
  end;  
  
  vs=20;
  if (IsEnterprise) then begin
    h = 180;
  end else begin
    h = 130;
  end;
  EditFieldTL(h,v=6, 150,"Customer",   M4UStr,Normal,30,f1,false,CUSClass);
  if (HasCategories) then begin
    EditFieldTL(h,v+=20,50, "Category",   M4UStr,Normal,5,f3,false,CCatSClass);
  end;
  if (HasObjects) then begin
    EditFieldTL(h,v+=20,150, "Tag/Object",   M4UStr,Normal,20,ObjStr,false,ObjSClass);
  end;
  if (HasContactClassification) then begin
    EditFieldTL(h,v+=20,50, "Classification",   M4UStr,Normal,30,f4,false,CClassSClass);
  end;
  if (IsEnterprise()) then begin
    EditFieldTL(h,v+=20,20, "Days of delay (not less than)",   M4Int,Normal,5,Comparison,false,0);
    // EditFieldTL(h,v+=vs ,80,"Min. Turnover",M4Val,Normal,0,vals0,true,0);// this is too slow
    EditFieldTL(h,v+=20,80, "Main Partner",   M4UStr,Normal,20,LastAcc,false,CUSClass);
    EditFieldTL(h,v+=vs ,80,"Min. Balance",M4Val,Normal,0,vals2,true,0);
    EditFieldTL(h,v+=vs ,80,"Min. no. of Invoices",M4Long,Normal,0,long1,true,0);
    EditFieldTL(h,v+=20,80,"On Date",M4Date,Normal,0,d1,false,PasteCurDate);
    // CheckBox(20,v+=20,0,"Endast kunder med saldo",flags[1]);
  end;
  
  ButtonFrame(h=30,vm=(v+=40),123,2,"Invoices");
  RadioButton(h,v,0,0,"Open",flags[0]);
  RadioButton(h,v+=16,2,0,"Overdue",flags[0]);

  if (HasMultiCurrency or HasBase2) then begin
    ButtonFrame(h,v+=40,123,2,"Amounts");
    RadioButton(h,v,0,0,"Base Currency",flags[4]);
    RadioButton(h,v+=16,1,0,"Currency",flags[4]);
  end;
  if (IsEnterprise()) then begin
    CheckBox(h,v+=30,0,"Down payment Receipts Only",flags[10]);
    CheckBox(h,v+=16,0,"Show Prepayment No.",flags[14]);
    CheckBox(h,v+=16,0,"Show #Instalments#",flags[19]);
    CheckBox(h,v+=16,0,"Include Open #Credit Notes#",flags[9]);
  end;
  if (HasOfficialSerNr) then begin
    if (IsEnterprise) then begin 
      v = v + 16;
    end else begin
      v = v + 25;
    end;
    CheckBox(h,v,0,"Show Official No.",flags[15]);
  end;
  ButtonFrame(h+=195,v=vm,125,3,"Function");
  RadioButton(h,v,1,0,"Summary",flags[5]);
  RadioButton(h,v+=16,2,0,"Per Customer",flags[5]);
  RadioButton(h,v+=16,0,0,"Detailed",flags[5]);
  
  if (IsEnterprise()) then begin
    ButtonFrame(h,v+=40,125,3,"Status");
    CheckBox(h,v,0,"Skip Disputed",flags[11]);
    CheckBox(h,v+=16,0,"Skip No Reminder",flags[12]);
    CheckBox(h,v+=16,0,"Skip No Collection",flags[13]);
  end;
  return;
end;