external procedure ExtractObj(string,var Integer,var string);
external procedure GetBaseCurncy(Integer,var string);
external function val AbsoluteVal(val);
external function string 255 StrReplace(string,string,string);


SetLangMode(LangUkrainian,"UKR",0);  

global procedure StockReportRn(record RcVc RepSpec)
begin
	record INVc INr;
	record DIVc DIr;
	record ITVc ITr;
	record ItemHistVc IHr;
	record IVVc IVr;
	date todate;
	array string 100 collection,brand;
	vector val colqty,colsum,totcolsum,totcolqty;
	vector boolean colvec,brandvec;
	string 100 location,tstr,inbrand,incol,sorttype;
	boolean testf,TrHs,intestf;
	integer k,pos,i,c,j,sercount;
	val rowsum,rowqty;
	
	
	todate = RepSpec.d1;
	location = RepSpec.f1;
	if(blankdate(RepSpec.d1))then begin
		todate = currentdate;
	end;
	
	sorttype = "BRAND";
	if(RepSpec.flags[0]==1)then begin
		sorttype = "TYPE";
	end;
	
	c = 0;
	k = 0;
	collection[c] = "0";
	colvec["0"] = true;
	brand[k] = "NoBrand";
	if(RepSpec.flags[0]==1)then begin
		brand[k] = "NoType";
	end;
	k=k+1;
	c=c+1;
	
	startreportnoheaderjob("Звіт по залишку товару Fashion House");
	INr.Code = "";
	while(loopmain(INr,1,true))begin
		intestf = true;
		inbrand = "NoBrand";
		if(RepSpec.flags[0]==1)then begin
			inbrand = "NoType";
		end;
		if(INr.Terminated!=0)then begin intestf = false; end;
		
		
		if(intestf)then begin
			pos = 0;
			ExtractObj(INr.DispGroups,pos,tstr);
			while (nonblank(tstr)) begin
				DIr.Code = tstr;
				if(readfirstmain(DIr,1,true))then begin
					if(DIr.CType==sorttype)then begin
						if(brandvec[DIr.Name]==false)then begin
							inbrand = DIr.Name;
							brand[k] = inbrand;
							k=k+1;
							brandvec[DIr.Name] = true;
						end else begin
							inbrand = DIr.Name;
						end;
					end;
				end;
				ExtractObj(INr.DispGroups,pos,tstr);
			end;
			
			
			TrHs = true;
			IHr.ArtCode = INr.Code;
			IHr.TransDate = stringtodate("1/1/2001");
			while(loopkey("ArtCode",IHr,2,TrHs))begin
				testf = true;
				incol = "";
				if(IHr.ArtCode!=INr.Code)then begin testf = false; TrHs = false; end;
				if(nonblank(location) and IHr.Location!=location)then begin testf = false; end;
				if(IHr.StockAffectf==0)then begin testf = false; end;
				if(IHr.TransDate>todate)then begin testf = false; TrHs = false; end;
			
				if(testf)then begin
					if(nonblank(IHr.SerialNr))then begin
						pos = 0;
						sercount = 0;
						
						IHr.SerialNr = StrReplace(IHr.SerialNr,"..",".SO.");
						IHr.SerialNr = StrReplace(IHr.SerialNr,"..",".SO.");
						IHr.SerialNr = StrReplace(IHr.SerialNr,"..",".SO.");
						IHr.SerialNr = StrReplace(IHr.SerialNr,"..",".SO.");
						
						ExtractObj(IHr.SerialNr,pos,tstr);
						while (nonblank(tstr)) begin
							if(nonblank(tstr))then begin
								sercount = sercount + 1;
								if(sercount==4)then begin
									incol = tstr;
								end else begin
									if(blank(incol))then begin
										incol = "0";
									end;
								end;
							end;
							ExtractObj(IHr.SerialNr,pos,tstr);
						end;
						if(colvec[incol]==false)then begin
							colvec[incol] = true;
							collection[c] = incol;
							c=c+1;
						end;
						colqty[inbrand & ":" & incol] = colqty[inbrand & ":" & incol] + IHr.Qty;
						totcolqty[incol] = totcolqty[incol] + IHr.Qty;
						if(IHr.Qty>0)then begin
							colsum[inbrand & ":" & incol] = colsum[inbrand & ":" & incol] + IHr.TotCostPrice;
							totcolsum[incol] = totcolsum[incol] + IHr.TotCostPrice;
						end else begin
							colsum[inbrand & ":" & incol] = colsum[inbrand & ":" & incol] - IHr.TotCostPrice;
							totcolsum[incol] = totcolsum[incol] - IHr.TotCostPrice;
						end;
						
					end else begin
						colqty[inbrand & ":" & "NoCollection"] = colqty[inbrand & ":" & "NoCollection"] + IHr.Qty;
						totcolqty["NoCollection"] = totcolqty["NoCollection"] + IHr.Qty;
						if(IHr.Qty>0)then begin
							colsum[inbrand & ":" & "NoCollection"] = colsum[inbrand & ":" & "NoCollection"] + IHr.TotCostPrice;
							totcolsum["NoCollection"] = totcolsum["NoCollection"] + IHr.TotCostPrice;
						end else begin
							colsum[inbrand & ":" & "NoCollection"] = colsum[inbrand & ":" & "NoCollection"] - IHr.TotCostPrice;
							totcolsum["NoCollection"] = totcolsum["NoCollection"] - IHr.TotCostPrice;
						end;
					end;
				end;
			end;
			resetloop(IHr);
		end;
	end;
	
	SortStringArray(collection);
	SortStringArray(brand);
	
	startformat(15);
		outstring(0,0,"Звіт по залишку товару Fashion House",false);
	endformat;
	startformat(15);
		outstring(150,0,"станом на",false);
		outstring(190,0,todate,false);
	endformat;
	startformat(15);
		outstring(150,0,"Склад: ",false);
		if(blank(location))then begin
			outstring(190,0,"Всі",false);
		end else begin
			outstring(190,0,location,false);
		end;
		
	endformat;
	startformat(15);
		outstring(150,0,"валюта - евро",false);
	endformat;
	startformat(15);
		outstring(0,0,"Назва бренду",false);
		pos = 0;
		For(i=0;i<c;i=i+1) begin
			if(totcolqty[collection[i]]!=0 or totcolsum[collection[i]]!=0)then begin
				outstring(50+pos*35,0,collection[i],false);
				outstring(50+pos*35+18,0,"",false);
				pos = pos + 1;
			end;
		end; 
		outstring(1,0,"РАЗОМ",true);
	endformat;
	startformat(15);
		outstring(0,0,"",false);
		pos = 0;
		For(i=0;i<c;i=i+1) begin
			if(totcolqty[collection[i]]!=0 or totcolsum[collection[i]]!=0)then begin
				outstring(50+pos*35,0,"К-сть",false);
				outstring(50+pos*35+18,0,"Сума закупки",false);
				pos = pos + 1;
			end;
		end; 
		outstring(-70,0,"К-сть",true);
		outstring(1,0,"Сума закупки",true);
	endformat;
	
	For(i=0;i<k;i=i+1) begin
		rowsum = 0;
		rowqty = 0;
		For(j=0;j<c;j=j+1) begin
			rowsum = rowsum + colsum[brand[i] & ":" & collection[j]];
			rowqty = rowqty + colqty[brand[i] & ":" & collection[j]];
		end;
		if(rowsum!=0 or rowqty!=0)then begin
			startformat(15);
				outstring(0,0,brand[i],false);
				pos = 0;
				For(j=0;j<c;j=j+1) begin
					if(totcolqty[collection[j]]!=0 or totcolsum[collection[j]]!=0)then begin
						outstring(50+pos*35,0,colqty[brand[i] & ":" & collection[j]],false);
						outstring(50+pos*35+18,0,colsum[brand[i] & ":" & collection[j]],false);
						pos = pos + 1;
					end;
				end; 
				outstring(-70,0,rowqty,true);
				outstring(1,0,rowsum,true);
			endformat;
		end;
	end;
	rowsum = 0;
	rowqty = 0;
	startformat(15);
			outstring(0,0,"Разом",false);
			For(j=0;j<c;j=j+1) begin
				if(totcolqty[collection[j]]!=0 or totcolsum[collection[j]]!=0)then begin
					pos = 0;
					outstring(50+pos*35,0,totcolqty[collection[j]],false);
					outstring(50+pos*35+18,0,totcolsum[collection[j]],false);
					pos = pos + 1;
					rowsum = rowsum + totcolsum[collection[j]];
					rowqty = rowqty + totcolqty[collection[j]];
				end;
			end; 
			outstring(-70,0,rowqty,true);
			outstring(1,0,rowsum,true);
		endformat;
	
	endjob;

return;
end;

global procedure SalesStockReportRn(record RcVc RepSpec)
begin
	record INVc INr;
	record DIVc DIr;
	record ITVc ITr;
	record ItemHistVc IHr;
	date todate,frdate;
	array string 100 collection,brand;
	vector val colqty,colsum,totcolsum,totcolqty,costsum,pricesum;
	vector boolean colvec,brandvec;
	string 100 location,tstr,inbrand,incol,sorttype;
	boolean testf,TrHs,intestf;
	integer k,pos,i,c,j,mtrw;
	val rowsum,rowqty;
	record IVVc IVr;
	row IVVc IVrw;
	val tempsum,totalsum,totalqty,totalgp,totalcost;
	string 5 basecur;
	
	GetBaseCurncy(1,basecur);
	
	frdate = RepSpec.sStartDate;
	todate = RepSpec.sEndDate;
	location = RepSpec.f1;
	k = 0;
	brand[k] = "NoBrand";
	k=k+1;
	
	sorttype = "BRAND";
	if(RepSpec.flags[0]==1)then begin
		sorttype = "TYPE";
	end;
	
	startreportnoheaderjob("Структура продаж Fashion House");
	INr.Code = "";
	while(loopmain(INr,1,true))begin
		intestf = true;
		inbrand = "NoBrand";
		if(RepSpec.flags[0]==1)then begin
			inbrand = "NoType";
		end;
		if(INr.Terminated!=0)then begin intestf = false; end;
		
		if(intestf)then begin
			pos = 0;
			ExtractObj(INr.DispGroups,pos,tstr);
			while (nonblank(tstr)) begin
				DIr.Code = tstr;
				if(readfirstmain(DIr,1,true))then begin
					if(DIr.CType==sorttype)then begin
						if(brandvec[DIr.Name]==false)then begin
							inbrand = DIr.Name;
							brand[k] = inbrand;
							k=k+1;
							brandvec[DIr.Name] = true;
						end else begin
							inbrand = DIr.Name;
						end;
					end;
				end;
				ExtractObj(INr.DispGroups,pos,tstr);
			end;
			
			
			TrHs = true;
			IHr.ArtCode = INr.Code;
			IHr.TransDate = frdate;
			while(loopkey("ArtCode",IHr,2,TrHs))begin
				testf = true;
				if(IHr.ArtCode!=INr.Code)then begin testf = false; TrHs = false; end;
				if(nonblank(location) and IHr.Location!=location)then begin testf = false; end;
				if(IHr.StockAffectf==0)then begin testf = false; end;
				if(IHr.TransDate>todate)then begin testf = false; TrHs = false; end;
				if(IHr.FileName!="IVVc")then begin testf = false; end;
			
				if(testf)then begin
					IVr.SerNr = IHr.TransNr;
					if(readfirstmain(IVr,1,true))then begin
						mtrw = matrowcnt(IVr);
						if(IHr.Row<mtrw)then begin
							matrowget(IVr,IHr.Row,IVrw);
							colqty[inbrand] = colqty[inbrand] + IHr.Qty;
							totalqty = totalqty + IHr.Qty;
							if(IHr.Qty>0)then begin
								tempsum = blankval;
								if(IVr.CurncyCode==basecur)then begin
									tempsum = -AbsoluteVal(IVrw.Sum/IVrw.Quant*IHr.Qty);
								end else begin
									tempsum = -AbsoluteVal(IVrw.Sum/IVrw.Quant*IHr.Qty/IVr.FrRate*IVr.ToRateB1);
								end;
								if(IHr.Invalid>0)then begin
									tempsum = -tempsum;
								end;
								costsum[inbrand] = costsum[inbrand] - IHr.TotCostPrice;
								pricesum[inbrand] = pricesum[inbrand] + tempsum;
								totalsum = totalsum + tempsum;
								totalcost = totalcost - IHr.TotCostPrice;
							end else begin
								tempsum = blankval;
								if(IVr.CurncyCode==basecur)then begin
									tempsum = AbsoluteVal(IVrw.Sum/IVrw.Quant*IHr.Qty);
								end else begin
									tempsum = AbsoluteVal(IVrw.Sum/IVrw.Quant*IHr.Qty/IVr.FrRate*IVr.ToRateB1);
								end;
								if(IHr.Invalid>0)then begin
									tempsum = -tempsum;
								end;
								costsum[inbrand] = costsum[inbrand] + IHr.TotCostPrice;
								pricesum[inbrand] = pricesum[inbrand] + tempsum;
								totalsum = totalsum + tempsum;
								totalcost = totalcost + IHr.TotCostPrice;
							end;
						end;
					end;
				end;
			end;
			resetloop(IHr);
		end;
	end;
	
	startformat(15);
		outstring(0,0,"Структура продаж Fashion House",false);
	endformat;
	startformat(15);
		outstring(150,0,"за період",false);
		outstring(190,0,frdate & " : " & todate,false);
	endformat;
	startformat(15);
		outstring(150,0,"Склад: ",false);
		if(blank(location))then begin
			outstring(190,0,"Всі",false);
		end else begin
			outstring(190,0,location,false);
		end;
		
	endformat;
	startformat(15);
		outstring(150,0,"валюта - евро",false);
	endformat;
	startformat(15);
		outstring(0,0,"Назва бренду",false);
		outstring(90,0,"К-сть",true);
		outstring(150,0,"Сума	",false);
		outstring(200,0,"",false);
		outstring(250,0,"Заробіток	",false);
		outstring(300,0,"",false);
		outstring(1,0,"Відсоток продажу в загальному т/о",true);
	endformat;
	startformat(15);
		outstring(0,0,"",false);
		outstring(90,0,"",true);
		outstring(150,0,"закупки",false);
		outstring(200,0,"продажи",false);
		outstring(250,0,"%",false);
		outstring(300,0,"сума",false);
		outstring(1,0,"",true);
	endformat;
	SortStringArray(brand);
	For(i=0;i<k;i=i+1) begin
		rowsum = 0;
		rowqty = 0;
		if(colqty[brand[i]]!=0 or pricesum[brand[i]]!=0 or costsum[brand[i]]!=0)then begin
			startformat(15);
				outstring(0,0,brand[i],false);
				outstring(90,0,-colqty[brand[i]],true);
				outstring(150,0,costsum[brand[i]],false);
				outstring(200,0,pricesum[brand[i]],false);
				//if(((pricesum[brand[i]]-costsum[brand[i]])/costsum[brand[i]]*100)<(-500))then begin
				//	outstring(250,0,-100,false);
				//end else begin
					outstring(250,0,(pricesum[brand[i]]-costsum[brand[i]])/costsum[brand[i]]*100,false);
				//end;
				outstring(300,0,pricesum[brand[i]]-costsum[brand[i]],false);
				outval(1,0,(pricesum[brand[i]]/totalsum)*100,m4val,true);
			endformat;
			totalgp = totalgp + pricesum[brand[i]]-costsum[brand[i]];
		end;

	end;
	rowsum = 0;
	rowqty = 0;
	startformat(15);
			outstring(0,0,"Разом",false);
			outstring(90,0,-totalqty,true);
			outstring(150,0,totalcost,false);
			outstring(200,0,totalsum,false);
			outval(250,0,(totalsum-totalcost)/totalcost*100,m4val,false);
			outstring(300,0,totalsum-totalcost,false);
			outstring(1,0,"",true);
		endformat;
	
	endjob;

return;
end;