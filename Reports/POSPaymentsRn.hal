external procedure ExtractObj(string,var Integer,var string);SetLangMode(LangRussian,"UKR",0);globalprocedure POSPaymentsRn(record RcVc RepSpec)BEGIN  record IVVc IVr;  row IVVc IVrw;  record LocalMachineBlock LMb;  integer pos;  boolean TrHs,testf;  date chkdate;  val card,giftcard,giftcardtot,grandtotal,cardtot,sumtot; //Cheban;  array val cash,cashtot;  integer i,rwcnt,j;  string 15 locmach;  date sd,ed;  record CurncyCodeVc CCr;	array string 20 curcodes;	integer cc,cred;  record INVC INr;  record DIVc DIr;  string 50 class;  string 255 tm;  array integer tab;  integer tabi;  boolean cashflag;    tabi = 0;  tab[tabi] = 0;  tabi = tabi + 1;  tab[tabi] = 35;  tabi = tabi + 1;  tab[tabi] = 70;  tabi = tabi + 1;  tab[tabi] = 150;  tabi = tabi + 1;  tab[tabi] = 190;  tabi = tabi + 1;  tab[tabi] = 220;  tabi = tabi + 1;  tab[tabi] = 245;  tabi = tabi + 1;  tab[tabi] = 275;  tabi = tabi + 1;  tab[tabi] = 300;  tabi = tabi + 1;  tab[tabi] = 335;  tabi = tabi + 1;  tab[tabi] = 365;  tabi = tabi + 1;  tab[tabi] = 410;  tabi = tabi + 1;  tab[tabi] = 440;  	cc = 0;	while(loopmain(CCr,1,true))begin		curcodes[cc] = CCr.CurncyCode;		cc = cc+1;	end;	  //chkdate = RepSpec.RegDate;  sd = RepSpec.sStartDate;  ed = RepSpec.sEndDate;  /*if (BlankDate(chkdate)) then begin  	goto LPOSPaymentsRn;  end;*/  locmach = RepSpec.f1;    StartReportJob(USetStr(3250));    Header(3,USetStr(28206) & " " & sd & ":" & ed,0);  EndHeader;    //BlockLoad(LMb);  if (RepSpec.Media==mtScreen) then begin    StartFormat(15);    tabi = 0;    OutString(tab[tabi],0,USetStr(4043),false); //IVr.SerNr    tabi = tabi + 1;    OutString(tab[tabi],0,USetStr(12463),false); //IVr.TransDate    tabi = tabi + 1;    Outstring(tab[tabi],0,"Код",false);    tabi = tabi + 1;    Outstring(tab[tabi],0,"Найменув.",false);    tabi = tabi + 1;    Outstring(tab[tabi],0,"Бренд",false);    tabi = tabi + 1;    Outstring(tab[tabi],0,"Кільк.",false);    tabi = tabi + 1;    Outstring(tab[tabi],0,"Ціна.",false);    tabi = tabi + 1;    Outstring(tab[tabi],0,"Знижка",false); 			    tabi = tabi + 1;    Outstring(tab[tabi],0,"Сума",false);    tabi = tabi + 1;    For(i=0;i<cc;i=i+1) begin      if tabi==10 then begin        OutString(tab[tabi]-8,0,"Готівка",false);      end;      tabi = tabi + 1;    end;         OutString(tab[tabi],0,"Кред. карткою",false); //card    EndFormat;    Gray_Divider(tab[9]-10,tab[12]-10);    StartFormat(15);      tabi = 9;      For(i=0;i<cc;i=i+1) begin        OutString(tab[tabi],0,curcodes[i],false); //cash        tabi = tabi + 1;      end;           EndFormat;  end else begin    StartFormat(15);    tabi = 0;    OutString(tab[tabi],0,USetStr(4043),false); //IVr.SerNr    tabi = tabi + 1;    OutString(tab[tabi],0,USetStr(12463),false); //IVr.TransDate    tabi = tabi + 1;    Outstring(tab[tabi],0,"Код",false);    tabi = tabi + 1;    Outstring(tab[tabi],0,"Найменув.",false);    tabi = tabi + 1;    Outstring(tab[tabi],0,"Бренд",false);    tabi = tabi + 1;    Outstring(tab[tabi],0,"Кільк.",false);    tabi = tabi + 1;    Outstring(tab[tabi],0,"Ціна.",false);    tabi = tabi + 1;    Outstring(tab[tabi],0,"Знижка",false); 			    tabi = tabi + 1;    Outstring(tab[tabi],0,"Сума",false);    tabi = tabi + 1;    For(i=0;i<cc;i=i+1) begin      OutString(tab[tabi],0,"Готівка " & curcodes[i],false); //cash      tabi = tabi + 1;    end;         OutString(tab[tabi],0,"Кред. карткою",false); //card        //OutString(pos+=110,0,"Под. сертификатом",false); //GiftSert    //OutString(pos+=110,0,"Подар.серт.",false); //certificate        EndFormat;  end;  Black_Divider(0,1);		For(j=0;j<cc;j=j+1) begin	  cashtot[j] = 0;	end; 	cashflag = false;  cardtot = 0;  giftcardtot = 0;  grandtotal = 0;  TrHs = true;  IVr.TransDate = sd;  while (LoopKey("TransDate",IVr,1,TrHs)) begin  	testf = true;  	if (IVr.TransDate>ed) then begin TrHs = false; testf = false; end;  	if (nonblank(locmach) and locmach!=IVr.MachineName) then begin testf = false; end;  	//if (IVr.SalesGroup!="SALES" and IVr.SalesGroup!="KV") then begin testf = false; end;  	if (IVr.TransDate<sd) then begin testf = false; end;  	if(RepSpec.flags[8]==1 and IVr.FiscalFlag==1)then begin testf = false;  end;  	if(RepSpec.flags[8]==2 and IVr.FiscalFlag==0)then begin testf = false;  end;  	if(IVr.OKFlag==0)then begin testf = false;  end;  	  	cred = 1;  	if(IVr.InvType==kInvoiceTypeCredit)then begin  		cred = -1;  	end;  	    if (testf) then begin      For(j=0;j<cc;j=j+1) begin				cash[j] = 0;			end;       giftcard = 0;      card = 0;      rwcnt = MatRowCnt(IVr);            for (i=0;i<rwcnt;i=i+1) begin      	MatRowGet(IVr,i,IVrw);      	if(IVrw.stp==kInvoiceRowTypeNormal and nonblank(IVrw.ArtCode))then begin          INr.Code = IVrw.ArtCode;          ReadFIrstMain(INr,1,true);          pos = 0;          class = "";          ExtractObj(INr.DispGroups,pos,class);          while(nonblank(class))begin            DIr.Code = class;            readfirstmain(DIr,1,true);            if(DIr.CType=="BRAND")then begin              tm = DIr.Name;            end;            ExtractObj(INr.DispGroups,pos,class);          end;          StartFormat(15);      	          tabi = 0;          Outstring(tab[tabi],0,IVr.SerNr,false);      		tabi = tabi + 1;          Outstring(tab[tabi],0,IVr.InvDate,false);      		tabi = tabi + 1;          if(nonblank(IVrw.SerialNr))then begin      			Outstring(tab[tabi],0,IVrw.SerialNr,false);            tabi = tabi + 1;      		end else begin      			Outstring(tab[tabi],0,IVrw.ArtCode,false);            tabi = tabi + 1;          end;          Outstring(tab[tabi],0,IVrw.Spec,false);          tabi = tabi + 1;          Outstring(tab[tabi],0,tm,false);          tabi = tabi + 1;          Outstring(tab[tabi],0,IVrw.Quant*cred,false);             tabi = tabi + 1;          Outstring(tab[tabi],0,IVrw.Price,false);          tabi = tabi + 1;          Outstring(tab[tabi],0,IVrw.vRebate,false); 			          tabi = tabi + 1;          Outstring(tab[tabi],0,IVrw.Sum*cred,false);          tabi = tabi + 1;          sumtot = sumtot + IVrw.Sum*cred;          EndFormat;      	end;      end;            for (i=0;i<rwcnt;i=i+1) begin      	MatRowGet(IVr,i,IVrw);      	switch (IVrw.stp) begin      		case kInvoiceRowTypeCashPayment:      			For(j=0;j<cc;j=j+1) begin							if(IVrw.CurncyCode==curcodes[j] or (blank(IVrw.CurncyCode)and IVr.CurncyCode==curcodes[j]))then begin								cash[j] = cash[j] + IVrw.Sum*cred;								cashtot[j] = cashtot[j] + IVrw.Sum*cred;								cashflag = true;	  			  	end;						end;	  			  	  			  //grandtotal = grandtotal + IVrw.Sum;  	  		case kInvoiceRowTypeCreditCardPayment:						cashflag = true;  		  		card = card + IVrw.Sum*cred;  		  		cardtot = cardtot + IVrw.Sum*cred;   		  		//grandtotal = grandtotal + IVrw.Sum;  		  	case kInvoiceRowTypeGiftVoucherPayment:  		  		giftcard = giftcard + IVrw.Sum*cred;  		  		giftcardtot = giftcardtot + IVrw.Sum*cred;	  	  end;      end;       if (IVr.RetnValue<>0 and cashflag) then begin      	For(j=0;j<cc;j=j+1) begin					if(IVr.CurncyCode==curcodes[j])then begin						cash[j] = cash[j] - IVr.RetnValue*cred;						cashtot[j] = cashtot[j] - IVr.RetnValue*cred;					end;				end;      	//cash = cash - IVr.RetnValue;      	//cashtot = cashtot - IVr.RetnValue;      	//grandtotal = grandtotal - IVr.RetnValue;      end;      StartFormat(15);        tabi = 0;        OutString(tab[tabi],0,IVr.SerNr,false);        tabi = tabi + 1;    	  OutString(tab[tabi],0,IVr.TransDate,false);    	  tabi = tabi + 1;                for(i=0;i<7;i=i+1) begin          OutString(tab[tabi],0,"",false);          tabi = tabi + 1;        end;    	  For(j=0;j<cc;j=j+1) begin					if (cash[j]<>0) then begin					 OutString(tab[tabi],0,cash[j],false);            tabi = tabi + 1;          end else begin            OutString(tab[tabi],0,"",false);            tabi = tabi + 1;        	end;    	  end;    	      	  if (card<>0) then begin          OutString(tab[tabi],0,card,false);          tabi = tabi + 1;        end else begin          OutString(tab[tabi],0,"",false);          tabi = tabi + 1;        end;    	     	  /*if (giftcard<>0) then begin    	   OutString(pos+=110,0,giftcard,false);    	  end else begin    	   OutString(pos+=110,0,"",false);    	  end;*/  	  EndFormat;  	end;  end;     Black_Divider(0,1);  StartFormat(15);  tabi = 0;  OutString(tab[tabi],0,USetStr(20537),false);  for(i=0;i<8;i=i+1) begin    OutString(tab[tabi],0,"",false);    tabi = tabi + 1;  end;  OutString(tab[tabi],0,sumtot,false);  tabi = tabi + 1;  For(j=0;j<cc;j=j+1) begin  	OutString(tab[tabi],0,cashtot[j],false);    tabi = tabi + 1;  end;  OutString(tab[tabi],0,cardtot,false);  EndFormat;    endjob;  LPOSPaymentsRn:;     RETURN;END;