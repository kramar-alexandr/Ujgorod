SetLangMode(LangRussian,"UKR",0);globalprocedure POSPaymentsRn(record RcVc RepSpec)BEGIN  record IVVc IVr;  row IVVc IVrw;  record LocalMachineBlock LMb;  integer pos,totpos;  boolean TrHs,testf;  date chkdate;  val card,giftcard,giftcardtot,grandtotal,cardtot; //Cheban;  array val cash,cashtot;    integer i,rwcnt,j;  string 15 locmach;  date sd,ed;  record CurncyCodeVc CCr;	array string 20 curcodes;	integer cc;		cc = 0;	while(loopmain(CCr,1,true))begin		curcodes[cc] = CCr.CurncyCode;		cc = cc+1;	end;	  //chkdate = RepSpec.RegDate;  sd = RepSpec.sStartDate;  ed = RepSpec.sEndDate;  /*if (BlankDate(chkdate)) then begin  	goto LPOSPaymentsRn;  end;*/  locmach = RepSpec.f1;    StartReportJob(USetStr(3250));    Header(3,USetStr(28206) & " " & sd & ":" & ed,0);  EndHeader;    //BlockLoad(LMb);  pos = 0;  StartFormat(15);  OutString(pos,0,USetStr(4043),false); //IVr.SerNr  OutString(pos+=50,0,USetStr(12463),false); //IVr.TransDate  For(i=0;i<cc;i=i+1) begin	  OutString(pos+=50,0,"Готівка " & curcodes[i],false); //cash	end;     OutString(pos+=50,0,"Кредитною карткою",false); //card    Outstring(340,0,"Кільк.",false);   	Outstring(380,0,"Ціна.",false);	Outstring(420,0,"Знижка",false); 				Outstring(460,0,"Сума",false);    //OutString(pos+=110,0,"Под. сертификатом",false); //GiftSert  //OutString(pos+=110,0,"Подар.серт.",false); //certificate  EndFormat;  Black_Divider(0,1);		For(j=0;j<cc;j=j+1) begin	  cashtot[j] = 0;	end;   cardtot = 0;  giftcardtot = 0;  grandtotal = 0;  TrHs = true;  IVr.TransDate = sd;  while (LoopKey("TransDate",IVr,1,TrHs)) begin  	testf = true;  	if (IVr.TransDate>ed) then begin TrHs = false; testf = false; end;  	if (nonblank(locmach) and locmach!=IVr.MachineName) then begin testf = false; end;  	//if (IVr.SalesGroup!="SALES" and IVr.SalesGroup!="KV") then begin testf = false; end;  	if (IVr.TransDate<sd) then begin testf = false; end;  	if(RepSpec.flags[8]==1 and IVr.FiscalFlag==1)then begin testf = false;  end;  	if(RepSpec.flags[8]==2 and IVr.FiscalFlag==0)then begin testf = false;  end;  	    if (testf) then begin      For(j=0;j<cc;j=j+1) begin				cash[j] = 0;			end;       giftcard = 0;      card = 0;      rwcnt = MatRowCnt(IVr);            for (i=0;i<rwcnt;i=i+1) begin      	MatRowGet(IVr,i,IVrw);      	if(IVrw.stp==kInvoiceRowTypeNormal and nonblank(IVrw.ArtCode))then begin      		Outstring(0,0,IVr.SerNr,false);      		Outstring(50,0,IVr.InvDate,false);      		if(nonblank(IVrw.SerialNr))then begin      			Outstring(200,0,IVrw.SerialNr,false);      		end else begin      			Outstring(200,0,IVrw.ArtCode,false);      		end;      			Outstring(280,0,IVrw.Spec,false);      			Outstring(340,0,IVrw.Quant,false);         			Outstring(380,0,IVrw.Price,false);      			Outstring(420,0,IVrw.vRebate,false); 			      			Outstring(460,0,IVrw.Sum,false);      			      	end;      end;            for (i=0;i<rwcnt;i=i+1) begin      	MatRowGet(IVr,i,IVrw);      	switch (IVrw.stp) begin      		case kInvoiceRowTypeCashPayment:      			For(j=0;j<cc;j=j+1) begin							if(IVrw.CurncyCode==curcodes[j] or (blank(IVrw.CurncyCode)and IVr.CurncyCode==curcodes[j]))then begin								cash[j] = cash[j] + IVrw.Sum;								cashtot[j] = cashtot[j] + IVrw.Sum;	  			  	end;						end;	  			  	  			  //grandtotal = grandtotal + IVrw.Sum;  	  		case kInvoiceRowTypeCreditCardPayment:  		  		card = card + IVrw.Sum;  		  		cardtot = cardtot + IVrw.Sum;   		  		//grandtotal = grandtotal + IVrw.Sum;  		  	case kInvoiceRowTypeGiftVoucherPayment:  		  		giftcard = giftcard + IVrw.Sum;  		  		giftcardtot = giftcardtot + IVrw.Sum;	  	  end;      end;       if (IVr.RetnValue<>0) then begin      	For(j=0;j<cc;j=j+1) begin					if(IVr.CurncyCode==curcodes[j])then begin						cash[j] = cash[j] - IVr.RetnValue;						cashtot[j] = cashtot[j] - IVr.RetnValue;					end;				end;      	//cash = cash - IVr.RetnValue;      	//cashtot = cashtot - IVr.RetnValue;      	//grandtotal = grandtotal - IVr.RetnValue;      end;      pos = 0;  	  StartFormat(15);    	  OutString(pos,0,IVr.SerNr,false);    	  OutString(pos+=50,0,IVr.TransDate,false);    	      	  For(j=0;j<cc;j=j+1) begin					if (cash[j]<>0) then begin					 OutString(pos+=50,0,cash[j],false);					end else begin					 OutString(pos+=50,0,"",false);					end;    	  end;    	      	  if (card<>0) then begin    	   OutString(pos+=50,0,card,false);    	  end else begin    	   OutString(pos+=50,0,"",false);    	  end;    	     	  /*if (giftcard<>0) then begin    	   OutString(pos+=110,0,giftcard,false);    	  end else begin    	   OutString(pos+=110,0,"",false);    	  end;*/  	  EndFormat;  	end;  end;     Black_Divider(0,1);  pos = 0;  StartFormat(15);  OutString(pos+=50,0,USetStr(20537),false);  //if (cashtot<>0) then begin  For(j=0;j<cc;j=j+1) begin  	OutString(pos+=50,0,cashtot[j],false);  end;  //end;  //if (cardChebantot<>0) then begin  	OutString(pos+=50,0,cardtot,false);  	totpos = pos + 70;  //end;  //if (cardBahchevantot<>0) then begin  //	OutString(pos+=110,0,cardBahchevantot,false);  //end;  /*if (giftcardtot<>0) then begin  	OutString(pos+=110,0,giftcardtot,false);  end;*/  EndFormat;  /*StartFormat(15);    OutString(totpos,0,USetStr(22137),false);    OutString(pos,0,grandtotal,false);  EndFormat;*/    endjob;  LPOSPaymentsRn:;     RETURN;END;