//Edit***************************Sasha2,17:22 24.10.2014 {procedure PopulateAndSaveMultipleQtyPURow(var array record PUVc PU2r,string item,val price,val qty,var array Integer rownr,integer index,string prlist)begin  record PUVc PU3r;  row PUVc PU3rw,PU2rw;  integer temprownr;  boolean found;  integer mtrw,i,pos;  val tempqty;    tempqty = qty;  found = false;  temprownr = rownr[index];	if (temprownr<1) then begin		RECORDNEW(PU3r);		if (NonBlank(prlist)) then begin			PU3r.LangCode = prlist; //price list		end;	end else begin		PU3r = PU2r[index];	end;	mtrw = matrowcnt(PU3r);	For(i=0;i<mtrw;i=i+1) begin	  matrowget(PU3r,i,PU2rw);	  if(PU2rw.ArtCode==item)then begin	  	pos = i;	  	found = true;	  	i = mtrw;	  end;	end; 	if(!found)then begin		pos = mtrw - 1;	end;	pos = pos + 1;	PU3rw.ArtCode = item;	PU3rw.UPrice = price;	while (tempqty>0) begin		MatRowInsert(PU3r,pos,PU3rw);		pos = pos + 1;		temprownr = temprownr + 1;		tempqty = tempqty - 1;	end;	rownr[index] = temprownr;	PU2r[index] = PU3r;  return;end; //Edit***************************Sasha2,17:22 24.10.2014 }global //Edit***************************Sasha2,17:38 13.10.2014 {procedure PrepareMultipleQtyPUVcLabelItems(record PUVc PUr,var array record PUVc PU2r,var array Integer rownr,string prlist)BEGIN  row PUVc PUrw;  record INVc INr;  Integer i,rwcnt;  record PLVc PLr;     rwcnt = MatRowCnt(PUr);    for (i=0;i<rwcnt;i=i+1) begin    	MatRowGet(PUr,i,PUrw);    	INr.Code = PUrw.ArtCode;    	if (nonblank(PUrw.ArtCode)/* and ReadFirstMain(INr,1,true)*/) then begin    		PLr.ArtCode = PUrw.ArtCode;    		PLr.PLCode = "RRP";    		readfirstmain(PLr,2,true);    		PopulateAndSaveMultipleQtyPURow(PU2r,PUrw.ArtCode,PLr.ExVatPrice,PUrw.Quant,rownr,0,prlist);    	end;    end;      RETURN;END; //Edit***************************Sasha2,17:38 13.10.2014 }global //Edit***************************Sasha2,17:38 13.10.2014 {procedure PrepareMultipleQtyStockMovVcLabelItems(record StockMovVc StockMovr,var array record PUVc PU2r,var array Integer rownr,string prlist)BEGIN  row StockMovVc StockMovrw;  record INVc INr;  Integer i,rwcnt;     rwcnt = MatRowCnt(StockMovr);    for (i=0;i<rwcnt;i=i+1) begin    	MatRowGet(StockMovr,i,StockMovrw);    	INr.Code = StockMovrw.ArtCode;    	if (nonblank(StockMovrw.ArtCode) and ReadFirstMain(INr,1,true)) then begin    		PopulateAndSaveMultipleQtyPURow(PU2r,StockMovrw.ArtCode,StockMovrw.BasePrice,StockMovrw.Quant,rownr,0,prlist);    	end;    end;      RETURN;END; //Edit***************************Sasha2,17:38 13.10.2014 }procedure ChangeUPrice(var record PUVc PU3r,string prlist)begin  row PUVc PU3rw;  record PLVc PLr;  integer i,rwcnt;  string 40 item;  	  rwcnt = MatRowCnt(PU3r);	  for (i=0;i<rwcnt;i=i+1) begin	    MatRowGet(PU3r,i,PU3rw);	    if (item!=PU3rw.ArtCode) then begin	      PLr.ArtCode = PU3rw.ArtCode;	      item = PU3rw.ArtCode;  	    PLr.PLCode = prlist;  	    Readfirstmain(PLr,2,true);	    end;  	  PU3rw.UPrice = PLr.ExVatPrice;  	  MatRowPut(PU3r,i,PU3rw);	  end;   return; end; global //Edit***************************Sasha2,16:14 26.01.2015 {procedure HandlePrintEAN13PU(record PUVc PUr,var array record PUVc PU2r,var array integer rownr)begin				PrepareMultipleQtyPUVcLabelItems(PUr,PU2r,rownr,"");    return;end; //Edit***************************Sasha2,16:14 26.01.2015 }global //Edit***************************Sasha2,16:14 26.01.2015 {procedure HandlePrintEAN13StockMov(record StockMovVc StockMovr,var array record PUVc PU2r,var array integer rownr)begin  /*array record PUVc PU2r;  array integer rownr;  boolean previewf;*/      	/*switch (RepSpec.ArtMode) begin  		case 0: previewf = false;  		case 1: previewf = true;  	end;*/  	//previewf = false;		PrepareMultipleQtyStockMovVcLabelItems(StockMovr,PU2r,rownr,"");  	/*if (rownr[0]>0) then begin  		PrintDocument(PU2r[0],"ItemLabForm9",previewf);  	end;*/    return;end; //Edit***************************Sasha2,16:14 26.01.2015 }