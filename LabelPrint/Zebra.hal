external procedure ExtractObj(string,var Integer,var string); 
external procedure GetPartsOfString(string,integer,var array string);

SetLangMode(LangUkrainian,"UKR",0);


global procedure Handle_Zebra_Printing(record RcVc RepSpec,var area aLabel,var boolean print,record ZebraPrinterBlock ZPb)
begin
  record PUVc PUr,newPUr;
  row PUVc PUrw,newPUrw;
  record StockMovVc SMr;
  row StockMovVc SMrw;
  record SRPriceVc SRPricer;
  row SRPriceVc SRPricerw;
  record BarCodeVc BarCoder;
  record INVc INr;
  record DIVc DIr;
  integer wn,i,mtrw,lenth,k,j,int,pos,loops;
  boolean foundf;
  string 20 s1,s2,s3,s4,s5,brand;
  array string 50 parts;

  recordnew(newPUr);
  k=0;
  print = false;
  wn = RepSpec.flags[2];
	DeselectWindow(wn,false);

	switch (RepSpec.f1) begin 
		case "PUVc":
			GetWindowRecord(wn,PUr);			
  		mtrw = MatRowCnt(PUr);
  		for (i=0;i<mtrw;i=i+1) begin
  		  MatRowGet(PUr,i,PUrw);
  		  if (nonblank(PUrw.ArtCode) and (PUrw.Quant>0)) then begin
  		     matrowget(newPUr,k,newPUrw);
  		     newPUrw.ArtCode = PUrw.ArtCode;  		     
  		     newPUrw.BarCode = PUrw.BarCode;
  		     newPUrw.Quant = PUrw.Quant;
  		     GetPartsOfString(PUrw.Spec,24,parts);
  		     newPUrw.Spec = parts[0];
  		     newPUrw.POReconComment = parts[1];
  		     newPUrw.VIReconComment = parts[2];
  		     matrowput(newPUr,k,newPUrw);
  		     k=k+1;
  		  end;
  		end;					
		case "StockMovVc":
			GetWindowRecord(wn,SMr);
  		mtrw = MatRowCnt(SMr);
  		for (i=0;i<mtrw;i=i+1) begin
  		  MatRowGet(SMr,i,SMrw);
  		  if (nonblank(SMrw.ArtCode) and (SMrw.Quant>0)) then begin
  		     matrowget(newPUr,k,newPUrw);
  		     newPUrw.ArtCode = SMrw.ArtCode;
  		     //newPUrw.BarCode = SMrw.BarCode;
  		     newPUrw.Quant = SMrw.Quant;
  		     GetPartsOfString(SMrw.Spec,24,parts);
  		     newPUrw.Spec = parts[0];
  		     newPUrw.POReconComment = parts[1];
  		     newPUrw.VIReconComment = parts[2];  		        
  		     matrowput(newPUr,k,newPUrw);
  		     k=k+1;
  		  end;
  		end;
  	case "SRPriceVc":
			GetWindowRecord(wn,SRPricer);
  		mtrw = MatRowCnt(SRPricer);
  		for (i=0;i<mtrw;i=i+1) begin
  		  MatRowGet(SRPricer,i,SRPricerw);
  		  if (nonblank(SRPricerw.ArtCode) and (SRPricerw.Qty>0)) then begin
  		     matrowget(newPUr,k,newPUrw);
  		     pos = 0;
  		     brand = "";
  		     INr.Code = SRPricerw.ArtCode;
  		     if (ReadFirstMain(INr,1,true)) then begin
    		     ExtractObj(INr.DispGroups,pos,s1); 
             while(nonblank(s1))begin
             	DIr.Code = s1;
             	if(readfirstmain(DIr,1,true))then begin
             		if(DIr.CType=="BRAND")then begin
             			brand = DIr.Name;
             			pos = len(INr.DispGroups);
             		end;
             	end;
             	ExtractObj(INr.DispGroups,pos,s1);
             end;
  		     end;
  		     //newPUrw.ArtCode = SRPricerw.ArtCode;
  		     newPUrw.Spec = INr.Name;
  		     newPUrw.POReconComment = brand;
  		     s2 = "";
  		     if (NonBlank(SRPricerw.SerialNr)) then begin
  		       lenth = len(SRPricerw.SerialNr);
  		       foundf = false;
  		       for (j = lenth; j>=1; j = j - 1) begin
               if (mid(SRPricerw.SerialNr,j - 1,1)==".") then begin
                 pos = j - 1;
                 j = 0;
                 foundf = true;
               end;
             end;
             if (foundf) then begin
               s2 = left(SRPricerw.SerialNr,pos);
             end else begin
               s2 = SRPricerw.SerialNr;
             end;
  		     end;
           newPUrw.SerialNr = s2;
           Barcoder.SerialNr = SRPricerw.SerialNr;
           ReadFirstKey("SerialNr",Barcoder,1,true);
           newPUrw.BarCode = Barcoder.Barcode;
           newPUrw.UPrice = SRPricerw.FIFO; //old price
           newPUrw.InPrice = SRPricerw.NewFIFO; //new price 
           newPUrw.Quant = SRPricerw.Qty; 		        
  		     matrowput(newPUr,k,newPUrw);
  		     k=k+1;
  		  end;
  		end;				
	end;

  if(k>0)then begin
    
    SetAreaZeroSize(aLabel);
    addtexttoarea("q432" & chr(13) & chr(10),aLabel); //Set Label Width 54      
    addtexttoarea("Q320,16" & chr(13) & chr(10),aLabel); //Set Label Height 40
    //addtexttoarea("R280,0" & chr(13) & chr(10),aLabel);
    if(ZPb.ParamIn1>0)then begin
    	if(ZPb.ParamIn1<16)then begin
    		addtexttoarea("D" & ZPb.ParamIn1 & chr(13) & chr(10),aLabel); //print density
    	end else begin
    		addtexttoarea("D15" & chr(13) & chr(10),aLabel); //print density
    	end;
    end else begin
			addtexttoarea("D15" & chr(13) & chr(10),aLabel); //print density
    end;
    addtexttoarea("I8,C" & chr(13) & chr(10),aLabel); //appropriate character set for printing and display (KDU) "C": Windows 1251 Cyrillic
    addtexttoarea("FK\"1\"" & chr(13) & chr(10),aLabel); //iDelete forms from memory
    addtexttoarea("FS\"1\"" & chr(13) & chr(10),aLabel); // Store Form
    addtexttoarea("V00,60,N,\"\"" & chr(13) & chr(10),aLabel); // Define Variable
    addtexttoarea("V01,60,N,\"\"" & chr(13) & chr(10),aLabel); // Define Variable
    addtexttoarea("V02,60,N,\"\"" & chr(13) & chr(10),aLabel); // Define Variable
    addtexttoarea("V03,60,N,\"\"" & chr(13) & chr(10),aLabel); // Define Variable
    addtexttoarea("V04,60,N,\"\"" & chr(13) & chr(10),aLabel); // Define Variable
    addtexttoarea("V05,60,N,\"\"" & chr(13) & chr(10),aLabel); // Define Variable
    addtexttoarea("V06,60,N,\"\"" & chr(13) & chr(10),aLabel); // Define Variable
    addtexttoarea("V07,15,N,\"\"" & chr(13) & chr(10),aLabel); // Define Variable
    addtexttoarea("A10,25,0,4,1,1,N,V00" & chr(13) & chr(10),aLabel); // Prints an ASCII text string
    addtexttoarea("A10,60,0,4,1,1,N,V01" & chr(13) & chr(10),aLabel); // Prints an ASCII text string
    addtexttoarea("A10,95,0,3,1,1,N,V02" & chr(13) & chr(10),aLabel); // Prints an ASCII text string
    addtexttoarea("LO10,145,170,2" & chr(13) & chr(10),aLabel); //Line draw black
    addtexttoarea("B190,120,0,1,2,2,50,B,V03" & chr(13) & chr(10),aLabel); // print standard bar codes
    addtexttoarea("A10,200,0,4,1,1,N,V04" & chr(13) & chr(10),aLabel); // Prints an ASCII text string
    //addtexttoarea("LS80,204,8,200,195" & chr(13) & chr(10),aLabel); //Line draw diagonal
    //addtexttoarea("LS80,230,4,200,190" & chr(13) & chr(10),aLabel); //Line draw diagonal
    addtexttoarea("LE80,212,240,4" & chr(13) & chr(10),aLabel);
    addtexttoarea("A10,235,0,4,1,1,N,V05" & chr(13) & chr(10),aLabel); // Prints an ASCII text string
    addtexttoarea("A100,275,0,3,2,2,N,V06" & chr(13) & chr(10),aLabel); // Prints an ASCII text string
    addtexttoarea("PAV07" & chr(13) & chr(10),aLabel); // to automatically print the form
    addtexttoarea("FE" & chr(13) & chr(10),aLabel); // command is used to end a form store sequence.
    addtexttoarea(chr(13) & chr(10),aLabel);
    
    mtrw = MatRowCnt(newPUr);
    for (i=0;i<mtrw;i=i+1) begin
      MatRowGet(newPUr,i,newPUrw);
      if (nonblank(newPUrw.Spec)) then begin
        if (newPUrw.Quant>1) then begin
          loops = newPUrw.Quant;
        end else begin
          loops = 1;
        end;
        while (loops>0) begin
          addtexttoarea("FR\"1\"" & chr(13) & chr(10),aLabel);
          addtexttoarea("?" & chr(13) & chr(10),aLabel);
          addtexttoarea("Тoвaр:" & newPUrw.Spec & chr(13) & chr(10),aLabel);
          addtexttoarea("Фірма:" & newPUrw.POReconComment & chr(13) & chr(10),aLabel);
          addtexttoarea("Мод.:" & newPUrw.SerialNr & chr(13) & chr(10),aLabel);
          addtexttoarea(newPUrw.BarCode & chr(13) & chr(10),aLabel); 
  				if (RepSpec.flags[10]==0) then begin
            int = newPUrw.UPrice;//val to integer  
            addtexttoarea("Ціна:" & int & " грн." & chr(13) & chr(10),aLabel);
    				addtexttoarea("Ціна зі знижкою:" & chr(13) & chr(10),aLabel);
    				int = newPUrw.InPrice;
            addtexttoarea(int & " грн." & chr(13) & chr(10),aLabel);
          end else begin
            int = newPUrw.InPrice;//val to integer  
            addtexttoarea("Ціна: " & newPUrw.InPrice & chr(13) & chr(10),aLabel);
    				addtexttoarea("" & chr(13) & chr(10),aLabel);
            addtexttoarea("" & chr(13) & chr(10),aLabel);
          end; 
          addtexttoarea("1" & chr(13) & chr(10),aLabel);
          addtexttoarea(chr(13) & chr(10),aLabel);
          loops = loops - 1;
        end;
      end;
    end;
  
		print = true;
  end;
  
return;
end;

global procedure Zebra_Printing(record RcVc RepSpec)
begin
  area aLabel;
  integer k;
  record ZebraPrinterBlock ZPb;
  String 100 filename;
  boolean print;
  
    blockload(ZPb);

   	SetExportCodePage("CP1251");
    Handle_Zebra_Printing(RepSpec,aLabel,print,ZPb);
    if (print) then begin
      filename = "ZebraPrint.epl";
      CreateFile(filename);
      closefile;
      WriteAreaToFile(aLabel,filename,0);
      millisleep(100);
      if (WindowsMode==1) then begin
        RunProgram("c:\\windows\\system32\\cmd.exe","/C \"" & "copy " & filename & " \\\\" & ZPb.CompNameWin & "\\" & ZPb.PrinterNameWin & "\"");
      end;
      if (WindowsMode==0) then begin
        RunProgram("/usr/bin/lp","-d " & ZPb.PrinterNameMac & " -o raw " & filename);
      end;
    end;
    
  return;
end;